syntax = "proto3";

package candidate;

message Resume {
  string name = 1;
  string email = 2;
  repeated string skills = 3;
  int32 experience_years = 4;
}

message JobDescription {
  string title = 1;
  repeated string required_skills = 2;
}

message Score {
  string candidate_name = 1;
  float match_percentage = 2;
}

message CandidateScores {
  repeated Score scores = 1;
}
// Request message for server streaming
message MatchRequest {
  string skill = 1;
}
//Existing Candidate message for server streaming
message Candidate {
  string name = 1;
  repeated string skills = 2;
  int32 experience_years = 3;
}

// for Client streaming
message UploadSummary {
  int32 total_received = 1;
  string message = 2;
}

// for Bi-directional
message ChatMessage {
  string sender = 1;
  string message = 2;
}


service CandidateService {
  rpc SubmitResume(Resume) returns (Score);
  rpc GetTopCandidates(JobDescription) returns (CandidateScores);
  
  // Server Streaming method
  rpc StreamCandidateMatches(MatchRequest) returns (stream Candidate);
  // Client Streaming Methos
  rpc UploadResumes(stream Resume) returns (UploadSummary);
  // B-directional
  rpc Chat(stream ChatMessage) returns (stream ChatMessage);
}
